plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.9.25'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.flywaydb.flyway' version '9.19.3'
	id 'org.jooq.jooq-codegen-gradle' version "3.19.15"
	id 'org.jlleitschuh.gradle.ktlint' version "11.3.1"
}

group = 'com.quo-card'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

sourceSets {
	main {
		java {
			srcDir("build/generated-src/jooq/main")
		}
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.jooq:jooq:3.19.5'
	implementation 'org.jooq:jooq-meta:3.19.5'
	implementation 'org.jooq:jooq-codegen:3.19.5'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	jooqCodegen 'org.postgresql:postgresql'
}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

flyway {
	url = 'jdbc:postgresql://localhost:5432/postgres'
	user = 'postgres'
	password = 'postgres'
	schemas = ['public']
	locations = ['filesystem:src/main/resources/db/migration']
}

jooq {
	configuration {
		jdbc {
			driver = 'org.postgresql.Driver'
			url = 'jdbc:postgresql://localhost:5432/postgres'
			user = 'postgres'
			password = 'postgres'
		}
		generator {
			name = 'org.jooq.codegen.DefaultGenerator'
			database {
				name = 'org.jooq.meta.postgres.PostgresDatabase'
				inputSchema = 'public'
			}
			target {
				packageName = 'com.quo_card.book_management_app.jooq'
				directory = "$buildDir/generated-src/jooq/main"
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}